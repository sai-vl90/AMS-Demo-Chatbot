trigger:
- main

variables:
  pythonVersion: '3.9'
  webAppName: 'ams-demo-app'

pool:
  vmImage: ubuntu-latest

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(pythonVersion)'
  displayName: 'Use Python $(pythonVersion)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

# Create configs directory and credentials file
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      mkdir -p configs
      cat > configs/credentials.yaml << EOF
      deeplake:
        token: "$(DEEPLAKE_TOKEN)"
        dataset_path: "$(DEEPLAKE_DATASET_PATH)"
      huggingface:
        token: "$(HUGGINGFACE_TOKEN)"
      groq:
        api_key: "$(GROQ_API_KEY)"
      langsmith:
        LANGCHAIN_TRACING_V2: 'true'
        LANGCHAIN_ENDPOINT: "$(LANGSMITH_ENDPOINT)"
        LANGCHAIN_API_KEY: "$(LANGSMITH_API_KEY)"
        LANGCHAIN_PROJECT: "ams-bot-main"
      azure_search:
        endpoint: "$(AZURE_SEARCH_ENDPOINT)"
        key: "$(AZURE_SEARCH_KEY)"
        index_name: "documents"
      flask:
        secret_key: "$(FLASK_SECRET_KEY)"
      EOF
  displayName: 'Create credentials file'

# Package application
- script: |
    mkdir -p $(Build.ArtifactStagingDirectory)
    zip -r $(Build.ArtifactStagingDirectory)/app.zip . -x "*.git*"
  displayName: 'Archive Application'

# Deploy to Azure Web App
- task: AzureWebApp@1
  inputs:
    azureSubscription: 'ndbs-innovation-Unified-Data-Analytics'
    appName: 'ams-demo-app'
    package: '$(Build.ArtifactStagingDirectory)/app.zip'
    startUpCommand: 'python app.py'